{"version":3,"sources":["containers/Background/Background.js","hoc/Axu.js","components/Welcome/Image/Image.js","components/Welcome/Main/LoginForm/Input/Input.js","components/Welcome/Main/LoginForm/Button/Button.js","axios/axios.js","components/Welcome/Spinner/Spinner.js","history/history.js","components/HomePage/SideBar/Item/Item.js","components/HomePage/SideBar/SideBar.js","components/HomePage/Main/TodoMain/TodoMain.js","components/HomePage/Main/AddTodoMain/AddTodoMain.js","components/HomePage/Main/TasklistMain/TasklistMain.js","components/HomePage/Main/Main.js","components/HomePage/NavigationBar/DropMenu/DropMenuItem/DropMenuItem.js","components/HomePage/NavigationBar/DropMenu/DropMenu.js","components/HomePage/NavigationBar/Logo/Logo.js","components/HomePage/NavigationBar/Search/Search.js","components/HomePage/NavigationBar/SayHi/SayHi.js","components/HomePage/NavigationBar/DrawToggle/DrawToggle.js","components/HomePage/NavigationBar/NavigationBar.js","components/HomePage/Backdrop/Backdrop.js","components/HomePage/Modal/Modal.js","components/HomePage/AddTaskListPanel/InputTaskListArea/InputTaskListArea.js","components/HomePage/AddTaskListPanel/SubmitButton/SubmitButton.js","components/HomePage/AddTaskListPanel/AddTaskListPanel.js","components/HomePage/Inbox/Inbox.js","components/HomePage/Share/Tasklist/Row/Row.js","components/HomePage/Share/Tasklist/Tasklist.js","components/HomePage/Share/Share.js","components/HomePage/ShareTasklistPanel/ShareTasklistPanel.js","components/HomePage/WorkPlace/WorkPlace.js","components/HomePage/HomePage.js","components/Welcome/Main/LoginForm/LoginForm.js","components/Welcome/Main/RegisterForm/Input/Input.js","components/Welcome/Main/RegisterForm/Button/Button.js","components/Welcome/Main/RegisterForm/RegisterForm.js","components/Welcome/Main/Main.js","components/Welcome/Welcome.js","containers/AccountAction/AccountAction.js","App.js","serviceWorker.js","index.js"],"names":["Background","className","this","props","children","Component","aux","image","Input","changeHandler","e","value","target","setData","label","type","onChange","button","onClick","clicked","title","token","store","get","client","uid","instance","axios","create","baseURL","headers","spinner","createBrowserHistory","forceRefresh","item","click","icon","color","number","SideBar","op1","op2","op3","controller","faStar","tasklists","clickTodo","faInbox","shared","clickInBox","faCalendarMinus","share","clickShare","TodoMain","useState","check","checked","setChecked","changeTodo","setChangeTodo","name","todoName","setTodoName","todoNameTemporary","settodoNameTemporary","del","setDelete","useEffect","a","patch","tasklistId","id","updateDone","style","display","alignItems","justifyContent","fontFamily","fontWeight","faCheck","cursor","then","res","catch","err","console","log","faEdit","faTimes","faTrash","delete","AddTodoMain","faPlus","placeholder","TaskListMain","todos","setTodos","loading","setLoading","taskListTemporary","setTaskListTemporary","taskListName","setTaskListName","changeTasklist","setChangeTasklist","todoAddition","setTodoAddition","email","setEmail","partner","setUser","request","data","fetchTodos","fetchData","map","user","user_id","cancelChangeTaskListHandler","addTodoHandler","post","JSON","stringify","opacity","fontSize","length","todo","done","key","edit","faTrashAlt","clickDeleteBtn","textAlign","Main","taskLists","setTasklist","fetchTaskList","updateData","list","tasklist","Col","lg","Row","dropMenuItem","dropMenu","faAddressCard","faSignOutAlt","clickedSignOutButton","logo","clickedLogo","search","faSearch","sayHi","clickedDropDown","faAngleDown","drawToggle","NavigationBar","state","showDropMenu","setState","refeshPage","backDrop","show","cancel","modal","transform","InputTaskListArea","submitButton","AddTaskListPanel","message","setTodo1Name","setTodo2Name","submitHandler","Inbox","is_write","write","setWrite","dele","put","taskListId","putData","task","width","margin","marginBottom","error","Tasklist","setShare","usersList","ob","renameKey","users","reduce","el","obj","old_key","new_key","Object","defineProperty","getOwnPropertyDescriptor","row","s","task_list_id","padding","overflow","maxWidth","Share","lists","taskList","ShareTasklistPanel","submit","correctEmail","correctTaskList","setUserEmail","setTasklistName","bind","disabled","backgroundColor","outline","border","WorkPlace","setTaskLists","setMessage","tasklistName","todo1Name","todo2Name","showAddList","setShowAddList","setShared","setController","showShareList","setShowShareList","setId","editPermission","setEditPermission","setCorrectTaskList","setUsers","setCorrectEmail","taskId","setTaskId","logoutAction","setLogoutAction","share_count","object","push","set","trim","toDo1","toDo2","permission","faShareSquare","isLoggedIn","homePage","LoginForm","password","setPassword","loginHandler","header","history","pathname","response","errors","keyPress","HomePage","handleKeys","onKeyEvent","mes","marginTop","isRegistered","clickedRegisterButton","RegisterForm","firstName","lastName","rightPassword","setFirstname","setLastname","checkConfirm","registerHandler","full_messages","keys","iKeys","Number","i","Array","arr","concat","pressKey","clickedLoginButton","main","showRegisterForm","registered","showLoginForm","successfulRegister","Welcome","showRegisterFormHandler","showLoginFormHandler","loginStep","successful","AccountAction","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27ab7969.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Background.css';\r\nclass Background extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Background\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Background;","\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport './Image.css';\r\n\r\nconst image = (props) => (\r\n    <div className=\"Image\"></div>\r\n)\r\n\r\nexport default image;","import React, { Component } from 'react';\r\nimport './Input.css';\r\nimport Aux from '../../../../../hoc/Axu';\r\n\r\nclass Input extends Component {\r\n    changeHandler = (e) => {\r\n        let value = e.target.value;\r\n        this.props.setData(value);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <div className=\"Input\">\r\n                    <div className=\"Block\">\r\n                        <label>{this.props.label}</label>\r\n                        <input type={this.props.type} onChange={this.changeHandler}/>\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Aux from '../../../../../hoc/Axu';\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <Aux>\r\n        <button className={props.className} onClick={props.clicked}>{props.title}</button>\r\n    </Aux>\r\n)\r\n\r\nexport default button;","import axios from 'axios';\r\nimport store from 'store';\r\n\r\nconst token = store.get(\"access_token\");\r\nconst client = store.get(\"client\");\r\nconst uid = store.get(\"uid\");\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://herokutuan.herokuapp.com',\r\n    headers: {'Authorization':'Bearer ya29.a0AfH6SMC3w1tXe7lCUECmZhkZZ1tRIaeYTrcF1B9_Bk7PFJcfbuxds7nEqowZQNqBs4_JBrnA9a2dDuY_r58jnUl0zgtBUZz95iTKwlVhvVzWgpaJzsiqD7045KO-NdLCa1TT7ZhZcP6npf_Ofb_Y-fkN9ZVgGjG',\r\n              'uid':`${uid}`,\r\n              'access-token':`${token}`,\r\n              'client':`${client}`,\r\n              'Content-Type': 'application/json'}\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport Aux from '../../../hoc/Axu';\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <Aux>\r\n        <div className=\"Spinner\"><div></div><div></div><div></div><div></div></div>\r\n    </Aux>\r\n)\r\n\r\nexport default spinner;","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory({forceRefresh:true}); ","import React from 'react';\r\nimport './Item.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst item = (props) => (\r\n    <Aux>\r\n        <div className=\"Item\" onClick={props.click}>\r\n            <div className=\"Icon\">\r\n            <FontAwesomeIcon icon={props.icon} color={props.color}/>\r\n            </div>\r\n                <p className=\"Label\">{props.label}</p>\r\n                <p className=\"Number\">{props.number}</p>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default item;","import React from 'react';\r\nimport './SideBar.css';\r\nimport Aux from '../../../hoc/Axu';\r\nimport Item from './Item/Item';\r\nimport { faCalendarMinus, faInbox, faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction SideBar(props) {\r\n    let op1 = true;\r\n    let op2 = false;\r\n    let op3 = false;\r\n\r\n    if(props.controller === 0){\r\n        op1 = true;\r\n        op2 = false;\r\n        op3 = false;\r\n    }else if(props.controller === 1){\r\n        op1 = false;\r\n        op2 = true;\r\n        op3 = false;\r\n    }else{\r\n        op1 = false;\r\n        op2 = false;\r\n        op3 = true;\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"SideBar\">\r\n                {op1 ? <Item icon={faStar} label=\"Todo\" number={props.tasklists} color=\"#5cb85c\" click={props.clickTodo}/> : <Item icon={faStar} label=\"Todo\" number={props.tasklists} color=\"white\" click={props.clickTodo}/>}\r\n                {op2 ? <Item icon={faInbox} label=\"Inbox\" number={props.shared} color=\"#5cb85c\" click={props.clickInBox}/> : <Item icon={faInbox} label=\"Inbox\" number={props.shared} color=\"white\" click={props.clickInBox}/>}\r\n                {op3 ? <Item icon={faCalendarMinus} label=\"Share\" number={props.share} color=\"#5cb85c\" click={props.clickShare}/> : <Item icon={faCalendarMinus} label=\"Share\" number={props.share} color=\"white\" click={props.clickShare}/>}\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { useEffect, useState } from 'react';\r\nimport './TodoMain.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from '../../../../axios/axios';\r\n\r\n\r\nfunction TodoMain(props) {\r\n\r\n    const [checked, setChecked] = useState(props.check);\r\n    const [changeTodo, setChangeTodo] = useState(false);\r\n    const [todoName, setTodoName] = useState(props.name);\r\n    const [todoNameTemporary, settodoNameTemporary] = useState(props.name);\r\n    const [del, setDelete] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function updateDone() { \r\n            await axios.patch(`/task_lists/${props.tasklistId}/todos/${props.id}`, {\"done\": `${checked}`});\r\n        }\r\n        updateDone();\r\n    }, [checked]);\r\n\r\n    const changeTodos = () => {\r\n        setChangeTodo(true);\r\n    }\r\n\r\n    const cancelChangeTodos = () => {\r\n        setChangeTodo(false);\r\n        settodoNameTemporary(todoName);\r\n    }\r\n\r\n    const submitChangeTodos = () => {\r\n        axios.patch(`/task_lists/${props.tasklistId}/todos/${props.id}`, {\"name\":`${todoNameTemporary}`})\r\n        .then(res => {\r\n            setChangeTodo(false);\r\n            setTodoName(todoNameTemporary);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const changeHandler = (e) => {\r\n        let value = e.target.value;\r\n        settodoNameTemporary(value);\r\n    }\r\n\r\n    const deleteTodos = () => {\r\n        axios.delete(`/task_lists/${props.tasklistId}/todos/${props.id}`)\r\n        .then(res => {\r\n            setDelete(true);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <Aux> \r\n\r\n            {\r\n                del ? \"\" :\r\n                <div className=\"TodoMain\">\r\n                <div className=\"TodoMainCheckbox\">\r\n                    {changeTodo ? <input type=\"text\" value={todoNameTemporary} onChange={changeHandler}/> : \r\n                    <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-around\"}}>\r\n                    <input \r\n                        type=\"checkbox\"\r\n                        checked={checked}\r\n                        onChange={() => setChecked(!checked)}/>\r\n                    <label style={{fontFamily: \"inherit\", fontWeight:\"100\"}}>{todoName}</label>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className=\"TodoMainIcon\">\r\n                    {changeTodo ? <FontAwesomeIcon icon={faCheck} style={{cursor:\"pointer\"}} onClick={submitChangeTodos}/> : <FontAwesomeIcon icon={faEdit} style={{cursor:\"pointer\"}} onClick={changeTodos}/>}\r\n                    {changeTodo ? <FontAwesomeIcon icon={faTimes} style={{cursor:\"pointer\"}} onClick={cancelChangeTodos}/> : <FontAwesomeIcon icon={faTrash} style={{cursor:\"pointer\"}} onClick={deleteTodos}/>}\r\n                </div>  \r\n            </div>\r\n            }  \r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default TodoMain;","import React from 'react';\r\nimport './AddTodoMain.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction AddTodoMain(props) {\r\n\r\n    const changeHandler = (e) => {\r\n        let value = e.target.value;\r\n        props.setData(value);\r\n    }\r\n    \r\n    return (\r\n        <Aux>\r\n            <div className=\"AddTodoMain\">\r\n                <FontAwesomeIcon icon={faPlus} onClick={props.click} className=\"AddTodoMainBtn\"/>\r\n                <input type=\"text\" placeholder=\"Add todo\" onChange={changeHandler} value={props.value}/>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default AddTodoMain;","import React, { useEffect, useState } from 'react';\r\nimport './TasklistMain.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport TodoMain from '../TodoMain/TodoMain';\r\nimport AddTodoMain from '../AddTodoMain/AddTodoMain';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from '../../../../axios/axios';\r\nimport Spinner from '../../../Welcome/Spinner/Spinner';\r\nimport todo from '../../SideBar/Project/Todos/Todo/Todo';\r\n\r\nfunction TaskListMain(props) {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [taskListTemporary, setTaskListTemporary] = useState(props.name);\r\n    const [taskListName, setTaskListName] = useState(props.name);\r\n    const [changeTasklist, setChangeTasklist] = useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [todoAddition, setTodoAddition] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [partner, setPartner] = useState(false);\r\n    const [sharePermission, setSharePermission] = useState(false);\r\n    const [partnerId, setPartnerId] = useState(\"\");\r\n    const [user, setUser] = useState([]);\r\n\r\n    const changeHandler = (e) => {\r\n        let value = e.target.value;\r\n        setTaskListTemporary(value);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchTodos() { \r\n            try {\r\n                const request = await axios.request(`/task_lists/${props.id}/todos`);\r\n                setTodos(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n         }\r\n        fetchTodos();\r\n    },[loading]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const request = await axios.request('/users');\r\n                setUser(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const request = await axios.request('/users');\r\n                const users = request.data;\r\n                users.map(user => {\r\n                    let id = user.id;\r\n                    if(id === props.user_id){\r\n                        setEmail(user.email);\r\n                    }\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const submitChangeHandler = ()  => {\r\n        axios.patch(`/task_lists/${props.id}`, {\"name\":`${taskListTemporary}`})\r\n        .then(res => {\r\n            setChangeTasklist(false);\r\n            setTaskListName(taskListTemporary);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const changeTaskListHandler = () => {\r\n        setChangeTasklist(true);\r\n    }\r\n\r\n    const cancelChangeTaskListHandler = (name) => {\r\n        setChangeTasklist(false);\r\n        setTaskListTemporary(taskListName);\r\n    }\r\n\r\n    const addTodoHandler = (id) => {\r\n        if(todoAddition === \"\"){\r\n            return;\r\n        }else{\r\n            setLoading(true);\r\n            axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todoAddition}`}))\r\n            .then(res => {\r\n                setTodoAddition(\"\");\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Aux>\r\n            <div className=\"TaskListMain\">\r\n                <div className=\"TaskListMainName\">\r\n                    {changeTasklist ? <input type=\"text\" style={{opacity:\"1\"}} value={taskListTemporary} onChange={changeHandler}/> : <h2 style={{opacity: \"1\"}}>{taskListName}  <span style={{color:\"black\", fontSize:\"10px\"}}>({todos.length})</span></h2> } \r\n                    <div className=\"TaskListMainNameIcon\" >\r\n                        {changeTasklist ? <FontAwesomeIcon icon={faCheck} onClick={submitChangeHandler}/> : <FontAwesomeIcon icon={faEdit} onClick={changeTaskListHandler}/>}\r\n                        {changeTasklist ? <FontAwesomeIcon icon={faTimes} onClick={cancelChangeTaskListHandler}/> : <FontAwesomeIcon icon={faTimes} onClick={cancelChangeTaskListHandler} style={{display:\"none\"}}/>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"TodosMain\">\r\n                    {\r\n                        todos.map(todo => {\r\n                            return <TodoMain \r\n                                    check={todo.done}\r\n                                    name={todo.name}\r\n                                    id={todo.id + todo.name}\r\n                                    key={props.id}\r\n                                    tasklistId={props.id}/>\r\n                        })\r\n                    }\r\n                </div>\r\n                {props.edit ? (\r\n                <div>\r\n                <div>\r\n                    <AddTodoMain \r\n                        setData={setTodoAddition} \r\n                        click={() => addTodoHandler(props.id)}\r\n                        value={todoAddition}/>\r\n                    <div className=\"DeleteBtn\" >\r\n                        <FontAwesomeIcon \r\n                            icon={faTrashAlt} \r\n                            color=\"red\" \r\n                            onClick={props.clickDeleteBtn}/>\r\n                    </div>\r\n                </div>\r\n                <h6 style={{opacity:\"0\"}}>You do not have edit permission</h6>\r\n                </div>) : (\r\n                <div>\r\n                <div style={{opacity:\"0\"}}>\r\n                    <AddTodoMain \r\n                        setData={setTodoAddition} \r\n                        click={() => addTodoHandler(props.id)}\r\n                        value={todoAddition}/>\r\n                    <div className=\"DeleteBtn\" >\r\n                        <FontAwesomeIcon \r\n                            icon={faTrashAlt} \r\n                            color=\"red\" \r\n                            onClick={props.clickDeleteBtn}/>\r\n                    </div>\r\n                </div>\r\n                <h6 style={{opacity:\"1\"}}>You do not have edit permission</h6>\r\n                </div>)}\r\n                {props.user_id ? <h6 style={{textAlign:\"center\", color:\"black\"}}>Shared by {email}</h6> : null}\r\n                {partner ? <h6 style={{textAlign:\"center\", color:\"black\"}}>Sharing with {partner}</h6> : null}\r\n    \r\n            </div>\r\n        </Aux>  \r\n    )\r\n  }\r\n\r\nexport default TaskListMain;","import React, {useEffect, useState} from 'react';\r\nimport './Main.css';\r\nimport Aux from '../../../hoc/Axu';\r\nimport TaskListMain from './TasklistMain/TasklistMain';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport axios from '../../../axios/axios';\r\n\r\n\r\nfunction Main(props){\r\n\r\n    const [taskLists, setTasklist] = useState([props.tasklists]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchTaskList(){\r\n            try {\r\n                const request = await axios.request('/task_lists');\r\n                setTasklist(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchTaskList();\r\n    }, [loading]);\r\n\r\n    useEffect(() => {\r\n        async function updateData() {\r\n            setTasklist(props.tasklists)\r\n        }\r\n        updateData();\r\n    }, [props.tasklists])\r\n\r\n    const deleteTasklistHandler = (id) => {\r\n        setLoading(true);\r\n        axios.delete(`/task_lists/${id}`)\r\n        .then(res => {\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    const list = taskLists.map(tasklist => {\r\n        return <Col \r\n                    lg={3} \r\n                    key={tasklist.id}>\r\n                        <TaskListMain \r\n                            name={tasklist.name} \r\n                            id={tasklist.id} \r\n                            key={tasklist.id+tasklist.name}\r\n                            clickDeleteBtn={() => deleteTasklistHandler(tasklist.id)}\r\n                            edit={true}/>\r\n                </Col>\r\n    })\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"MainDisplay\">\r\n                {props.children}\r\n                <div className=\"TaskListArea\">\r\n                    <Row>\r\n                        {list}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './DropMenuItem.css';\r\nimport Aux from '../../../../../hoc/Axu';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst dropMenuItem = (props) => (\r\n    <Aux>\r\n        <div className=\"DropMenuItem\" onClick={props.clicked}>\r\n            <FontAwesomeIcon icon={props.icon}/>\r\n<           p>{props.label}</p>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default dropMenuItem;","import React from 'react';\r\nimport './DropMenu.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport { faAddressCard, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport DropMenuItem from './DropMenuItem/DropMenuItem';\r\n\r\nconst dropMenu = (props) => (\r\n    <Aux>\r\n        <div className=\"DropMenu\">\r\n            <DropMenuItem label=\"Profile\" icon={faAddressCard}/>\r\n            <DropMenuItem label=\"Log Out\" icon={faSignOutAlt} clicked={props.clickedSignOutButton}/>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default dropMenu;","import React from 'react';\r\nimport './Logo.css';\r\nimport Aux from '../../../../hoc/Axu';\r\n\r\nconst logo = (props) => (\r\n    <Aux>\r\n        <div className=\"Logo\" onClick={props.clickedLogo}>\r\n            <p>Suynghidi</p>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport './Search.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst search = (props) => (\r\n    <Aux>\r\n        <div className=\"Search\">\r\n                <FontAwesomeIcon icon={faSearch} color=\"black\"/>\r\n                <input type=\"text\" placeholder=\"Name of Tasklist...\"/>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default search;","import React from 'react';\r\nimport './SayHi.css';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst sayHi = (props) => (\r\n    <Aux>\r\n        <div className=\"Sayhi\">\r\n            <p>{props.name}</p>\r\n            <div className=\"DropDown\" onClick={props.clickedDropDown}>\r\n                <FontAwesomeIcon icon={faAngleDown} color=\"black\"/>\r\n            </div>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default sayHi;","import React from 'react';\r\nimport './DrawToggle.css';\r\nimport Aux from '../../../../hoc/Axu';\r\n\r\nconst drawToggle = (props) => (\r\n    <Aux>\r\n        <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default drawToggle;","import React, { Component } from 'react';\r\nimport './NavigationBar.css';\r\nimport Aux from '../../../hoc/Axu';\r\nimport DropMenu from './DropMenu/DropMenu';\r\nimport Logo from './Logo/Logo';\r\nimport Search from './Search/Search';\r\nimport SayHi from './SayHi/SayHi';\r\nimport DrawToggle from './DrawToggle/DrawToggle';\r\n\r\nclass NavigationBar extends Component {\r\n    state = {\r\n        showDropMenu: false\r\n    }\r\n    showDropMenu = () => {\r\n        this.setState({\r\n            showDropMenu: !this.state.showDropMenu\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <div className=\"NavigationBar\">\r\n                    <DrawToggle/>\r\n                    <Logo clickedLogo={this.props.refeshPage}/>\r\n                    <Search/>\r\n                    <SayHi clickedDropDown={this.showDropMenu} name=\"Account\"/>\r\n                    {this.state.showDropMenu ? <DropMenu clickedSignOutButton={this.props.clickedSignOutButton}/> : \"\"}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport './Backdrop.css';\r\nimport Aux from '../../../hoc/Axu';\r\n\r\nconst backDrop = (props) => (\r\n    <Aux>\r\n        {props.show ? <div className=\"BackDrop\" onClick={props.cancel}></div> : null}\r\n    </Aux>\r\n)\r\n\r\nexport default backDrop;","import React from 'react';\r\nimport './Modal.css';\r\nimport Aux from '../../../hoc/Axu';\r\nimport BackDrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <BackDrop \r\n            show={props.show}\r\n            cancel={props.cancel}/>\r\n        <div \r\n        className=\"Modal\"\r\n        style={{transform: props.show ? 'translateY(0)': 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n)\r\n\r\nexport default modal;","import React from 'react';\r\nimport './InputTaskListArea.css';\r\nimport Aux from '../../../../hoc/Axu';\r\n\r\nfunction InputTaskListArea (props) {\r\n    const changeHandler = (e) => {\r\n        let value = e.target.value;\r\n        props.setData(value);\r\n    }\r\n    return (\r\n        <Aux>\r\n            <div className=\"InputTaskListArea\">\r\n                <label>{props.name}</label>\r\n                <input type=\"text\" onChange={changeHandler}/>\r\n            </div>\r\n        </Aux>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default InputTaskListArea;","import React from 'react';\r\nimport './SubmitButton.css';\r\n\r\nconst submitButton = (props) => (\r\n    <p className=\"AddButtonSubmit\" onClick={props.click}>Submit</p>\r\n\r\n)\r\n\r\nexport default submitButton;","import React from 'react';\r\nimport './AddTaskListPanel.css';\r\nimport Aux from '../../../hoc/Axu';\r\nimport InputTaskListArea from './InputTaskListArea/InputTaskListArea';\r\nimport SubmitButton from './SubmitButton/SubmitButton';\r\nimport Spinner from '../../Welcome/Spinner/Spinner';\r\n\r\nfunction AddTaskListPanel (props) {\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"AddTaskListPanel\">\r\n                <h2>Add Task List</h2>\r\n                {props.message ? <p style={{color:\"red\"}}>You need to enter tasklist name</p> : null}\r\n                <InputTaskListArea name=\"TaskList\" setData={props.setTaskListName}/>\r\n                <InputTaskListArea name=\"Todo 1\" setData={props.setTodo1Name}/>\r\n                <InputTaskListArea name=\"Todo 2\" setData={props.setTodo2Name}/>\r\n                <SubmitButton click={props.submitHandler}/>\r\n                { props.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : null}\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default AddTaskListPanel;","import React, {useEffect, useState} from 'react';\r\nimport Aux from '../../../hoc/Axu';\r\nimport TaskListMain from '../Main/TasklistMain/TasklistMain';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport axios from '../../../axios/axios';\r\n\r\n\r\nfunction Inbox(props){\r\n    const [taskLists, setTasklist] = useState([props.tasklists]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            try {\r\n                const request = await axios.request('/shared');\r\n                setTasklist(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const list = taskLists.map(tasklist => {\r\n        return <Col \r\n                    lg={3} \r\n                    key={tasklist.id}>\r\n                        <TaskListMain \r\n                            name={tasklist.name} \r\n                            id={tasklist.id} \r\n                            key={tasklist.id+tasklist.name}\r\n                            edit={tasklist.is_write}\r\n                            user_id={tasklist.user_id}/>\r\n                </Col>\r\n    })\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"MainDisplay\">\r\n                <div className=\"TaskListArea\">\r\n                    <Row>\r\n                        {list}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Inbox;","import React, { useEffect } from 'react';\r\nimport TodoMain from '../../../Main/TodoMain/TodoMain';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport { useState } from 'react';\r\nimport axios from '../../../../../axios/axios';\r\n\r\nfunction Row(props) {\r\n\r\n    const [write, setWrite] = useState(props.is_write);\r\n    const [dele, setDelete] = useState(false);\r\n    const [todos, setTodos] = useState([]);\r\n    const user = props.user;\r\n\r\n    useEffect(() => {\r\n        async function putData() {\r\n            try {\r\n                await axios.put(`/task_lists/${props.taskListId}/share/${props.user_id}`, {\"share_task\":{'is_write': `${write}`}});\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        putData();\r\n    },[write])\r\n\r\n    useEffect(() => {\r\n        async function fetchTodos() { \r\n            try {\r\n                const request = await axios.request(`/task_lists/${props.taskListId}/todos`);\r\n                setTodos(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n         }\r\n        fetchTodos();\r\n    },[props.taskListId]);\r\n\r\n    const deleteShare = () => {\r\n        try {\r\n            axios.delete(`task_lists/${props.taskListId}/share/${props.user_id}`);\r\n            setDelete(true);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    let task = (<div className=\"TaskListMain\" style={{width:\"250px\", margin:\"10px\"}}>\r\n    <div className=\"TaskListMainName\">\r\n        <h2>{props.name}  <span style={{color:\"black\", fontSize:\"10px\"}}>({todos.length})</span></h2>\r\n    </div>\r\n    <div className=\"TodosMain\">\r\n        {\r\n            todos.map(todo => {\r\n                return <TodoMain \r\n                        check={todo.done}\r\n                        name={todo.name}\r\n                        id={todo.id}\r\n                        key={props.id}\r\n                        tasklistId={props.id}/>\r\n            })\r\n        }\r\n    </div>\r\n    <span style={{color:\"red\", marginBottom:\"20px\"}}>{user[props.id]}</span>\r\n    <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-around\", width:\"150px\"}}>\r\n            <input \r\n                type=\"checkbox\"\r\n                checked={write}\r\n                onChange={() => setWrite(!write)}/>\r\n            <label style={{fontFamily: \"inherit\", fontWeight:\"100\"}}>Edit Permission</label>\r\n    </div>\r\n    <div className=\"DeleteBtn\">\r\n            <FontAwesomeIcon \r\n                icon={faTrashAlt} \r\n                color=\"red\" \r\n                onClick={deleteShare}/>\r\n    </div>\r\n</div>);\r\n    return (\r\n        dele ? null: task\r\n    )\r\n}\r\nexport default Row;","import React, {useEffect, useState} from 'react';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport axios from '../../../../axios/axios';\r\nimport Row from './Row/Row';\r\n\r\nfunction Tasklist(props) {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [share, setShare] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const request = await axios.request(`/task_lists/${props.id}/share`);\r\n                setShare(request.data);\r\n            } catch (error) {\r\n                console.log(error);   \r\n            }\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const request = await axios.request('/users');\r\n                const usersList = request.data;\r\n                const list = usersList.map(user => {\r\n                    let id = user.id;\r\n                    let email = user.email;\r\n                    const ob = {id: email};\r\n                    renameKey(ob, \"id\", id);\r\n                    return ob;\r\n                });\r\n                const users = list.reduce((ob, el) => {\r\n                    return {...ob, ...el}\r\n                });\r\n                setUser(users);\r\n            } catch (error) {\r\n                console.log(error); \r\n            }\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    const renameKey = (obj, old_key, new_key) => {    \r\n        // check if old key = new key   \r\n            if (old_key !== new_key) {                   \r\n               Object.defineProperty(obj, new_key, // modify old key \r\n                                    // fetch description from object \r\n               Object.getOwnPropertyDescriptor(obj, old_key)); \r\n               delete obj[old_key];                // delete old key \r\n               } \r\n        }\r\n\r\n        const row = share.map(s => {\r\n            return <Row\r\n                        key={s.user_id}\r\n                        user={user}\r\n                        id={s.user_id}\r\n                        taskListId={s.task_list_id}\r\n                        is_write={s.is_write}\r\n                        name={props.name}\r\n                        user_id={s.user_id}/>\r\n        }) \r\n\r\n    return (\r\n        <Aux>\r\n            <div style={{marginBottom:\"15px\", padding:\"10px\", display:'flex', overflow:\"scroll\", maxWidth:\"1200px\"}}> \r\n                {row}\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Tasklist;\r\n","import React, {useState} from 'react';\r\nimport Aux from '../../../hoc/Axu';\r\nimport TaskList from './Tasklist/Tasklist';\r\n\r\n\r\n\r\nfunction Share(props){\r\n    const [taskLists, setTasklist] = useState([props.tasklists]);\r\n\r\n    const list = taskLists.reduce(taskList => {\r\n        return taskList;\r\n    })\r\n    \r\n    const lists = list.map(list => {\r\n        return <div\r\n                    key={list.id}>\r\n                        <TaskList\r\n                            name={list.name}\r\n                            id={list.id}\r\n                            key={list.id+list.name}/>\r\n                </div>\r\n    })\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"MainDisplay\">\r\n                <div className=\"TaskListArea\">\r\n                        {lists}\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Share;","import React from 'react';\r\nimport Aux from '../../../hoc/Axu';\r\nimport InputTaskListArea from '../AddTaskListPanel/InputTaskListArea/InputTaskListArea';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../../Welcome/Spinner/Spinner';\r\nimport \"./ShareTasklistPanel.css\";\r\n\r\nfunction ShareTasklistPanel(props) {\r\n\r\n    let submit = false;\r\n\r\n    const setPermission = (e) => {\r\n        let value = e.target.value;\r\n        props.setData(value);\r\n    }\r\n\r\n    if(props.correctEmail && props.correctTaskList){\r\n        submit = true;\r\n    }\r\n\r\n    return(\r\n        <Aux>\r\n        <div className=\"AddTaskListPanel ShareTaskListPanel\">\r\n                <h2>Share Task List</h2>\r\n                {props.message ? <p style={{color:\"red\"}}>You need to enter tasklist name</p> : null}\r\n                <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\r\n                    <InputTaskListArea name=\"User Email\" setData={props.setUserEmail}/>\r\n                    {props.correctEmail ? <FontAwesomeIcon icon={faCheck} color=\"#00ff00\"/> : <FontAwesomeIcon icon={faTimes} color=\"#ff0000\"/>}\r\n                </div>\r\n                <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\r\n                    <InputTaskListArea name=\"TaskList Name\" setData={props.setTasklistName}/>\r\n                    {props.correctTaskList ? <FontAwesomeIcon icon={faCheck} color=\"#00ff00\"/> : <FontAwesomeIcon icon={faTimes} color=\"#ff0000\"/>}\r\n                </div>\r\n                <div style={{display:'flex', alignItems:\"center\", justifyContent:\"space-between\"}} onChange={setPermission.bind(this)}>\r\n                    <label>Edit Permission</label>\r\n                    <input type=\"radio\" value=\"editor\" name=\"name\"/>Editor\r\n                    <input type=\"radio\" value=\"watcher\" name=\"name\"/>Watcher\r\n                </div>\r\n                <button onClick={props.submitHandler} disabled={!submit} style={{width:\"30%\", padding:\"5px\", backgroundColor:\"#5cb85c\", color:\"white\", outline:\"none\", border:\"none\"}}>Submit</button>\r\n                { props.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : null}\r\n            </div>\r\n    </Aux>\r\n\r\n    )\r\n}\r\n\r\nexport default ShareTasklistPanel;","import React, {useState, useEffect} from 'react';\r\nimport './WorkPlace.css';\r\nimport Aux from '../../../hoc/Axu';\r\nimport SideBar from '../SideBar/SideBar';\r\nimport Main from '../Main/Main';\r\nimport NavigationBar from '../NavigationBar/NavigationBar';\r\nimport store from 'store';\r\nimport history from '../../../history/history';\r\nimport Modal from '../Modal/Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faShareSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport AddTaskListPanel from '../AddTaskListPanel/AddTaskListPanel';\r\nimport axios from '../../../axios/axios';\r\nimport taskList from '../SideBar/Project/TaskList/TaskList';\r\nimport Inbox from '../Inbox/Inbox';\r\nimport Share from '../Share/Share';\r\nimport ShareTaskListPanel from '../ShareTasklistPanel/ShareTasklistPanel';\r\nimport AccountAction from '../../../containers/AccountAction/AccountAction';\r\n\r\nfunction WorkPlace(props) {\r\n\r\n    const [taskLists, setTaskLists] = useState([]);\r\n    const [message, setMessage] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [tasklistName, setTasklistName] = useState(\"\");\r\n    const [todo1Name, setTodo1Name] = useState(\"\");\r\n    const [todo2Name, setTodo2Name] = useState(\"\");\r\n    const [showAddList, setShowAddList] =useState(false);\r\n    const [todoAddition, setTodoAddition] = useState(\"\");\r\n    const [shared, setShared] = useState([]);\r\n    const [share, setShare] = useState([]);\r\n    const [controller, setController] = useState(0);\r\n    const [showShareList, setShowShareList] = useState(false);\r\n    const [taskListName, setTaskListName] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n    const [editPermission, setEditPermission] = useState(false);\r\n    const [correctTaskList, setCorrectTaskList] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [correctEmail, setCorrectEmail] = useState(false);\r\n    const [taskId, setTaskId] = useState(\"\");\r\n    const [shareMessage, setShareMessage] = useState(false);\r\n    const [logoutAction, setLogoutAction] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchTaskList(){\r\n            try {\r\n                const request = await axios.request('/task_lists');\r\n                setTaskLists(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchTaskList();\r\n    }, [loading]);\r\n\r\n    useEffect(() => {\r\n        async function fetchTaskList(){\r\n            try {\r\n                const request = await axios.request('/task_lists');\r\n                setTaskLists(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchTaskList();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            try {\r\n                const request = await axios.request('/task_lists');\r\n                const taskList = request.data;\r\n                const share = [];\r\n                taskList.map(taskList => {\r\n                    if(taskList.share_count !== 0){\r\n                        let object = {id: taskList.id, name: taskList.name};\r\n                        share.push(object);\r\n                    }\r\n                })\r\n                setShare(share);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [loading]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            try {\r\n                const request = await axios.request('/shared');\r\n                setShared(request.data)\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            try {\r\n                const request = await axios.request('/users');\r\n                setUsers(request.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    const logout = () => {\r\n        store.set('isLoggedIn', false);\r\n        store.set('access_token',\"\");\r\n        store.set('uid', \"\");\r\n        store.set('client', \"\");\r\n        setLogoutAction(true);\r\n    };\r\n    \r\n    const refeshPage = () => {\r\n        setLogoutAction(true);\r\n    };\r\n\r\n    const clickTodoHandler = () => {\r\n        setController(0);\r\n    };\r\n\r\n    const clickInboxHandler = () => {\r\n        setController(1);\r\n    };\r\n\r\n    const clickShareHandler = () => {\r\n        setController(2);\r\n    };\r\n    \r\n    const setTasklistsName = (taskList) => {\r\n        setTasklistName(taskList.trim());\r\n    }\r\n\r\n    const setTodo1 = (toDo1) => {\r\n        setTodo1Name(toDo1.trim());\r\n    } \r\n\r\n    const setTodo2 = (toDo2) => {\r\n        setTodo2Name(toDo2.trim());\r\n    }\r\n\r\n    const setTodo = (todo) => {\r\n        setTodoAddition(todo.trim());\r\n    }\r\n\r\n    const setTaskListId = (taskList) => {\r\n        let tasklist = taskList;\r\n        if(correctTaskList === true){\r\n            setCorrectTaskList(false);\r\n        } \r\n        taskLists.map(taskList => {\r\n            if (taskList.name === tasklist){\r\n                setCorrectTaskList(true);\r\n                setTaskId(taskList.id);\r\n                return;\r\n            }\r\n        })\r\n    }\r\n\r\n    const setUserEmail = (email) => {\r\n        if(correctEmail === true){\r\n            setCorrectEmail(false);\r\n        }\r\n        users.map(user => {\r\n            if(user.email === email){\r\n                setCorrectEmail(true);\r\n                setId(user.id);\r\n            }\r\n        })   \r\n    }\r\n\r\n    const setEdit = (permission) => {\r\n        if(permission === \"editor\"){\r\n            setEditPermission(true);\r\n        } else if(permission === \"watcher\"){\r\n            setEditPermission(false);\r\n        }\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        setLoading(true);\r\n        if(tasklistName === \"\"){\r\n            setMessage(true);\r\n            setLoading(false);\r\n        }else{\r\n            axios.post('/task_lists', JSON.stringify({\"name\": `${tasklistName}`}))\r\n            .then(res => {\r\n                const id = res.data.id;\r\n                if(todo1Name === \"\"){\r\n                    if(todo2Name === \"\"){\r\n                        setLoading(false);\r\n                        setMessage(false);\r\n                        setShowAddList(false);\r\n                        return;\r\n                    }else{\r\n                        axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todo2Name}`}))\r\n                        .then(res => {\r\n                            setLoading(false);\r\n                            setMessage(false);\r\n                            setShowAddList(false);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        })\r\n                    }\r\n                }else{\r\n                    axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todo1Name}`}))\r\n                    .then(res => {\r\n                        if(todo2Name === \"\"){\r\n                            setLoading(false);\r\n                            setMessage(false);\r\n                            setShowAddList(false);\r\n                            return;\r\n                        }else{\r\n                            axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todo2Name}`}))\r\n                            .then(res => {\r\n                                setLoading(false);\r\n                                setMessage(false);\r\n                                setShowAddList(false);\r\n                            })\r\n                            .catch(err => {\r\n                                console.log(err);\r\n                            })\r\n                        }\r\n                    })  \r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    }) \r\n                }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    }\r\n\r\n    const cancelAddTaskListHandler = () => {\r\n        setLoading(false);\r\n        setMessage(false);\r\n        setShowAddList(false);\r\n    }\r\n\r\n    const addTasklistHandler = () => {\r\n        setShowAddList(true);\r\n    }\r\n\r\n    const shareTasklistHandler = () => {\r\n        setShowShareList(true);\r\n    }\r\n\r\n    const cancelShareTaskListHandler = () => {\r\n        setLoading(false);\r\n        setMessage(false);\r\n        setShowShareList(false);\r\n        setCorrectTaskList(false);\r\n        setCorrectEmail(false);\r\n        setId(\"\");\r\n        setEditPermission(false);\r\n        setTaskId(\"\");\r\n    }\r\n\r\n    const submitShare = () => {\r\n        setLoading(true);\r\n        axios.post(`/task_lists/${taskId}/share`, {\"user_id\": `${id}`, \"is_write\":`${editPermission}`})\r\n        .then(res => {\r\n            setLoading(false);\r\n            setShowShareList(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    \r\n        return(\r\n            <Aux>\r\n                {logoutAction ? <AccountAction/> : \r\n                    (<div className=\"WorkPlace\">\r\n                    <SideBar\r\n                        clickTodo={clickTodoHandler}\r\n                        clickInBox={clickInboxHandler}\r\n                        clickShare={clickShareHandler}\r\n                        tasklists={taskLists.length}\r\n                        share={share.length}\r\n                        shared={shared.length}\r\n                        controller={controller}/>\r\n                    <div className=\"ActionArea\">\r\n                        <NavigationBar \r\n                            refeshPage={refeshPage} \r\n                            clickedSignOutButton={logout}/>\r\n                        {controller === 0 ? (<Main\r\n                            tasklists={taskLists}>\r\n                            <Modal \r\n                                show={showAddList}\r\n                                cancel={cancelAddTaskListHandler}>\r\n                            <AddTaskListPanel\r\n                                setTaskListName={setTasklistsName}\r\n                                setTodo1Name={setTodo1}\r\n                                setTodo2Name={setTodo2}\r\n                                submitHandler={submitHandler}\r\n                                loading={loading}\r\n                                message={message}/>\r\n                            </Modal>\r\n                            <Modal \r\n                                show={showShareList}\r\n                                cancel={cancelShareTaskListHandler}>\r\n                            <ShareTaskListPanel\r\n                                setUserEmail={setUserEmail}\r\n                                setTasklistName={setTaskListId}\r\n                                submitHandler={submitShare}\r\n                                loading={loading}\r\n                                correctTaskList={correctTaskList}\r\n                                correctEmail={correctEmail}\r\n                                setData={setEdit}/>\r\n                            </Modal>\r\n                            <div className=\"TaskListOption\">\r\n                                <FontAwesomeIcon \r\n                                    icon={faPlus} \r\n                                    onClick={addTasklistHandler}/>\r\n                                <FontAwesomeIcon \r\n                                    icon={faShareSquare}\r\n                                    onClick={shareTasklistHandler}/>\r\n                            </div>\r\n                        </Main>\r\n                    ) : null}\r\n                    {controller === 1 ? <Inbox tasklists={shared}/>  : null}\r\n                    {controller === 2 ? <Share tasklists={share}/> : null}\r\n                    </div>\r\n                </div>)\r\n                }\r\n                \r\n            </Aux>\r\n        )\r\n}\r\n\r\nexport default WorkPlace;","import React from 'react';\r\nimport WorkPlace from '../HomePage/WorkPlace/WorkPlace';\r\nimport store from 'store';\r\nimport AccountAction from '../../containers/AccountAction/AccountAction';\r\nimport history from '../../history/history';\r\n\r\nconst isLoggedIn = store.get(\"isLoggedIn\");\r\n\r\n\r\n\r\nconst homePage = () => {\r\n    if(isLoggedIn === false){   \r\n        return <AccountAction/>\r\n    }else{\r\n        return(\r\n            <div className=\"HomePage\">\r\n                <WorkPlace/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default homePage;","import React, { Component } from 'react';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport Input from './Input/Input';\r\nimport './LoginForm.css';\r\nimport Button from './Button/Button';\r\nimport axios from '../../../../axios/axios';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport store from 'store';\r\nimport { withRouter } from 'react-router-dom';\r\nimport history from '../../../../history/history';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport HomePage from '../../../HomePage/HomePage';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        message: false,\r\n        loading: false\r\n    }\r\n\r\n    setEmail = (email) => {\r\n        this.setState({email: email});\r\n    }\r\n\r\n    setPassword = (password) => {\r\n        this.setState({password: password});\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.setState({loading: true});\r\n        axios.post('/auth/sign_in', this.state)\r\n        .then((res) => {\r\n            this.setState({loading:false});\r\n            const header = res.headers;\r\n            store.set('isLoggedIn', true);\r\n            store.set('access_token', header['access-token']);\r\n            store.set('client', header.client);\r\n            store.set('uid', header.uid);\r\n            history.push({pathname:'/'});  \r\n        })\r\n        .catch((error) => {\r\n            this.setState({loading:false});\r\n            this.setState({message: error.response.data.errors});\r\n        })\r\n    }\r\n\r\n    keyPress = () => {\r\n        this.loginHandler();\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = store.get(\"isLoggedIn\");\r\n        if(isLoggedIn === true){\r\n            return <HomePage/>\r\n        }else{\r\n            return (\r\n                <Aux>\r\n                    <KeyboardEventHandler\r\n                        handleKeys={['enter']}\r\n                        onKeyEvent={this.keyPress}>\r\n                        <div className=\"LoginForm\">\r\n                            <h2 className=\"Title\">Login</h2>\r\n                            {this.state.message ? this.state.message.map(mes => <p key={mes} style={{color: \"red\", textAlign:\"center\", marginTop:\"3px\"}}>{mes}</p>) : \"\"}\r\n                            {this.props.isRegistered ? <p style={{color:\"#a8df65\", textAlign:\"center\"}}>Successful Register, Log In to continue !</p> : \"\"}\r\n                            <Input label=\"Email\" type=\"email\" setData={this.setEmail}/>\r\n                            <Input label=\"Password\" type=\"password\" setData={this.setPassword}/>\r\n                            <div className=\"ButtonGroup\">\r\n                                <Button className=\"LoginButton\" title=\"Login\" clicked={this.loginHandler}/>\r\n                                <Button className=\"RegisterButton\" title=\"Register\" clicked={this.props.clickedRegisterButton}/>\r\n                            </div>\r\n                            {this.state.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : \"\"}\r\n                        </div>\r\n                    </KeyboardEventHandler>\r\n                </Aux>\r\n            )\r\n        }  \r\n    }\r\n} \r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\nimport './Input.css';\r\nimport Aux from '../../../../../hoc/Axu';\r\n\r\nclass Input extends Component{\r\n    changeHandler = (e) => {\r\n        let value = e.target.value;\r\n        this.props.setData(value);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <div className=\"Input\">\r\n                    <div className=\"Block\">\r\n                        <label>{this.props.label}</label>\r\n                        {this.props.message ? <p></p> : <p style={{color: 'red'}}>Password does not match</p>}\r\n                        <input type={this.props.type} onChange={this.changeHandler}/>\r\n                </div>\r\n            </div>\r\n    </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Aux from '../../../../../hoc/Axu';\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <Aux>\r\n        <button className={props.className} onClick={props.clicked} disabled={props.disabled}>{props.title}</button>\r\n    </Aux>\r\n)\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../../hoc/Axu';\r\nimport Input from './Input/Input';\r\nimport Button from './Button/Button';\r\nimport axios from '../../../../axios/axios';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport store from 'store';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\nclass RegisterForm extends Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        rightPassword: true,\r\n        loading: false, \r\n        message: false,\r\n        done: false\r\n    }\r\n\r\n    setFirstname = (firstName) => {\r\n        this.setState({firstName: firstName})\r\n    }\r\n\r\n    setLastname = (lastName) => {\r\n        this.setState({lastName: lastName});\r\n    }\r\n\r\n    setEmail = (email) => {\r\n        this.setState({email: email});\r\n    }\r\n\r\n    setPassword = (password) => {\r\n        this.setState({password: password});\r\n    }\r\n\r\n    checkConfirm = (password) => {\r\n        if(password.length !== 0){\r\n            this.setState({rightPassword: password === this.state.password});\r\n        }\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.setState({loading: true});\r\n        if (this.state.rightPassword){\r\n            const data = {\r\n                name: this.state.firstName + this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n\r\n            axios.post('/auth', data)\r\n            .then((res) => {\r\n                this.setState({loading: false});\r\n                store.set('successfulRegister', true);\r\n                this.setState({done: true});\r\n                this.props.done(this.state.done);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({loading: false});\r\n                const message = error.response.data.errors.full_messages;\r\n                let keys = Object.keys(message)\r\n                            .map(iKeys => Number(iKeys))\r\n                            .map(i => [...Array(message[i])])\r\n                            .reduce((arr, el) => {\r\n                                return arr.concat(el)\r\n                            })\r\n                            .map(mes => <p keys={mes} style={{color:\"red\", textAlign:\"center\", marginTop:\"3px\"}}>{mes}</p>)\r\n                this.setState({message: keys})\r\n            })\r\n        }\r\n    }\r\n\r\n    pressKey = () => {\r\n        this.registerHandler();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Aux>\r\n                <KeyboardEventHandler\r\n                    handleKeys={['enter']}\r\n                    onKeyEvent={this.pressKey}>\r\n                    <div className=\"RegisterForm\">\r\n                        <h2 className=\"Title\">Register</h2>\r\n                        {this.state.message}\r\n                        <Input label=\"First Name\" type=\"text\" setData={this.setFirstname} message={true}/>\r\n                        <Input label=\"Last Name\" type=\"text\" setData={this.setLastname} message={true}/>\r\n                        <Input label=\"Email\" type=\"email\" setData={this.setEmail} message={true}/>\r\n                        <Input label=\"Password\" type=\"password\" setData={this.setPassword} message={true}/>\r\n                        <Input label=\"Confirm Password\" type=\"password\" setData={this.checkConfirm} message={this.state.rightPassword}/>\r\n                        <div className=\"ButtonGroup\">\r\n                            <Button className=\"RegisterButton\" title=\"Register Now\" clicked={this.registerHandler}/>\r\n                            <Button className=\"LoginButton\" clicked={this.props.clickedLoginButton} title=\"Have an account\"/>\r\n                        </div>\r\n                        {this.state.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : \"\"}\r\n                    </div>\r\n                </KeyboardEventHandler>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport './Main.css';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport RegisterForm from './RegisterForm/RegisterForm';\r\n\r\nconst main = (props) => (\r\n    <div className=\"Main\">\r\n        {props.show ? <LoginForm \r\n                        clickedRegisterButton={props.showRegisterForm} \r\n                        isRegistered={props.registered}/> : \r\n                      <RegisterForm \r\n                        clickedLoginButton={props.showLoginForm}\r\n                        done={props.successfulRegister}/>}\r\n    </div>\r\n)\r\n\r\nexport default main;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Axu';\r\nimport './Welcom.css';\r\nimport Image from './Image/Image';\r\nimport Main from './Main/Main';\r\n\r\nclass Welcome extends Component {\r\n\r\n    state = {\r\n        show: true,\r\n        successfulRegister: false\r\n    }\r\n\r\n    showRegisterFormHandler = () => {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    showLoginFormHandler = () => {\r\n        this.setState({\r\n            show: true\r\n        })\r\n    }\r\n\r\n    loginStep = (successful) => {\r\n        if(successful){\r\n            this.setState({\r\n                show: true,\r\n                successfulRegister: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <Aux>\r\n            <div className=\"Welcome\">\r\n                <Main show={this.state.show} \r\n                      showRegisterForm={this.showRegisterFormHandler} \r\n                      showLoginForm={this.showLoginFormHandler}\r\n                      successfulRegister={this.loginStep}\r\n                      registered={this.state.successfulRegister}/>\r\n                <Image />\r\n            </div>\r\n        </Aux>)\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport Background from '../Background/Background';\r\nimport Welcome from '../../components/Welcome/Welcome';\r\nimport HomePage from '../../components/HomePage/HomePage';\r\nimport store from 'store';\r\n\r\n\r\nfunction AccountAction () {\r\n\r\n    const isLoggedIn = store.get(\"isLoggedIn\");\r\n\r\n    if(isLoggedIn){\r\n        return(\r\n            <HomePage/>\r\n        )\r\n    }else{\r\n        return(\r\n            <Background>\r\n                <Welcome/>\r\n            </Background>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountAction;","import React from 'react';\nimport './App.css';\nimport AccountAction from './containers/AccountAction/AccountAction';\nimport {Route, Switch, Router } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';  \nimport history from './history/history';\n//import {HashRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  // const history = createBrowserHistory({forceRefresh: true});\n  return (\n        <div className=\"App\"> \n          <AccountAction/>\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}